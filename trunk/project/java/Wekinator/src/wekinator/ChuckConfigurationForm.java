/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ChuckConfigurationForm.java
 *
 * Created on Nov 13, 2009, 4:01:42 PM
 */
package wekinator;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author rebecca
 */
public class ChuckConfigurationForm extends javax.swing.JFrame {

    ChuckConfiguration configuration;
    ChuckConfiguration initialConfiguration;
    String homePath = "../../";

    /** Creates new form ChuckConfigurationForm */
    public ChuckConfigurationForm(ChuckConfiguration c) {
        configuration = c;
        initialConfiguration = new ChuckConfiguration(configuration);
                initComponents();
        updateAllComponents();
    }

   /* public ChuckConfigurationForm(File configurationFile) throws FileNotFoundException, IOException, ClassNotFoundException {
        configuration = ChuckConfiguration.loadFromFile(configurationFile);
        initialConfiguration = new ChuckConfiguration(configuration);
        initComponents();
        updateAllComponents();
    } */

    public void setHomePath(String s) {
        homePath = s;
    }

    private void enableDiscreteSynthStuff(boolean b) {
        labelSynthMaxParamVals.setEnabled(b);
        labelSynthExpects.setEnabled(b);
        textSynthMaxParamVals.setEnabled(b);
        comboUseDist.setEnabled(b);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        radioUseChuckSynth = new javax.swing.JRadioButton();
        labelSynthClass = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        buttonChooseChuckSynth = new javax.swing.JButton();
        radioUseOSCSynth = new javax.swing.JRadioButton();
        textSynthNumParams = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        helpSynth = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        comboRealInteger = new javax.swing.JComboBox();
        textSynthReceivePort = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        textSynthSendPort = new javax.swing.JFormattedTextField();
        labelSynthMaxParamVals = new javax.swing.JLabel();
        textSynthMaxParamVals = new javax.swing.JFormattedTextField();
        comboUseDist = new javax.swing.JComboBox();
        labelSynthExpects = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelCustomFeatureExtractor = new javax.swing.JLabel();
        buttonChooseChuckFeatureExtractor = new javax.swing.JButton();
        checkEnableCustomChuckFeature = new javax.swing.JCheckBox();
        textNumCustomFeatures = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        checkEnableOSCFeature = new javax.swing.JCheckBox();
        textNumOscFeatures = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        helpFeatures = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        helpPlayalong = new javax.swing.JButton();
        checkEnablePlayalong = new javax.swing.JCheckBox();
        buttonChoosePlayalongFile = new javax.swing.JButton();
        labelScorePlayer = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        buttonLoadConfiguration = new javax.swing.JButton();
        buttonSaveConfiguration = new javax.swing.JButton();
        buttonOK = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        buttonChangeChuckExecutable = new javax.swing.JButton();
        labelChuckExecutable = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttonChangeCoreChuckLocation = new javax.swing.JButton();
        labelCoreChuckDirectory = new javax.swing.JLabel();
        helpCoreChuck = new javax.swing.JButton();
        buttonSaveConfiguration1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Synthesis / Composition (Output)"));

        buttonGroup1.add(radioUseChuckSynth);
        radioUseChuckSynth.setText("Use a ChucK synth class");

        labelSynthClass.setText("/user/rebecca/stuff/core_chuck/");

        jLabel9.setText("Location of SynthClass file:");

        buttonChooseChuckSynth.setText("Choose file");
        buttonChooseChuckSynth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChooseChuckSynthActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioUseOSCSynth);
        radioUseOSCSynth.setText("Use an OSC synth/composition module (launch manually)");

        textSynthNumParams.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        textSynthNumParams.setText("0");
        textSynthNumParams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSynthNumParamsActionPerformed(evt);
            }
        });
        textSynthNumParams.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                textSynthNumParamsPropertyChange(evt);
            }
        });

        jLabel10.setText("My synth takes");

        helpSynth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wekinator/info.png"))); // NOI18N

        jLabel11.setText("parameters");

        comboRealInteger.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Real-valued", "Integer-valued" }));
        comboRealInteger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboRealIntegerActionPerformed(evt);
            }
        });

        textSynthReceivePort.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        textSynthReceivePort.setText("0");
        textSynthReceivePort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSynthReceivePortActionPerformed(evt);
            }
        });
        textSynthReceivePort.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                textSynthReceivePortPropertyChange(evt);
            }
        });

        jLabel12.setText("My synth receives parameters on port");

        jLabel13.setText("and sends to port ");

        textSynthSendPort.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        textSynthSendPort.setText("0");
        textSynthSendPort.setEnabled(false);
        textSynthSendPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSynthSendPortActionPerformed(evt);
            }
        });
        textSynthSendPort.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                textSynthSendPortPropertyChange(evt);
            }
        });

        labelSynthMaxParamVals.setText("Its max # values per parameter is ");
        labelSynthMaxParamVals.setEnabled(false);

        textSynthMaxParamVals.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        textSynthMaxParamVals.setText("0");
        textSynthMaxParamVals.setEnabled(false);
        textSynthMaxParamVals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSynthMaxParamValsActionPerformed(evt);
            }
        });
        textSynthMaxParamVals.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                textSynthMaxParamValsPropertyChange(evt);
            }
        });

        comboUseDist.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "just the parameters, please", "a probability distribution over all parameter values" }));
        comboUseDist.setEnabled(false);

        labelSynthExpects.setText("My synth expects");
        labelSynthExpects.setEnabled(false);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(radioUseChuckSynth)
                                .add(8, 8, 8)
                                .add(buttonChooseChuckSynth)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 664, Short.MAX_VALUE)
                                .add(helpSynth))
                            .add(radioUseOSCSynth)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(27, 27, 27)
                                .add(jLabel9)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(labelSynthClass))))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(45, 45, 45)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(jLabel10)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(textSynthNumParams, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(comboRealInteger, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(labelSynthMaxParamVals)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(textSynthMaxParamVals, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(8, 8, 8)
                                .add(jLabel11))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(labelSynthExpects)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(comboUseDist, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel12)
                                .add(10, 10, 10)
                                .add(textSynthReceivePort, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel13)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(textSynthSendPort, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(469, 469, 469)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(buttonChooseChuckSynth)
                            .add(radioUseChuckSynth))
                        .add(3, 3, 3)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel9)
                            .add(labelSynthClass))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(radioUseOSCSynth)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel10)
                            .add(textSynthNumParams, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(comboRealInteger, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel11)))
                    .add(helpSynth))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelSynthMaxParamVals)
                    .add(textSynthMaxParamVals, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelSynthExpects)
                    .add(comboUseDist, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel12)
                    .add(textSynthReceivePort, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel13)
                    .add(textSynthSendPort, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Features (Input)"));

        jLabel1.setText("Location of CustomFeatureExtractor file:");

        labelCustomFeatureExtractor.setText("/user/rebecca/stuff/core_chuck/");

        buttonChooseChuckFeatureExtractor.setText("Choose file");
        buttonChooseChuckFeatureExtractor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChooseChuckFeatureExtractorActionPerformed(evt);
            }
        });

        checkEnableCustomChuckFeature.setText("Enable a custom ChucK feature extractor");
        checkEnableCustomChuckFeature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkEnableCustomChuckFeatureActionPerformed(evt);
            }
        });

        textNumCustomFeatures.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        textNumCustomFeatures.setText("0");
        textNumCustomFeatures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNumCustomFeaturesActionPerformed(evt);
            }
        });
        textNumCustomFeatures.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                textNumCustomFeaturesPropertyChange(evt);
            }
        });

        jLabel5.setText("features extracted");

        checkEnableOSCFeature.setText("Enable an OSC feature extractor (e.g., Max/MSP) (launch manually)");
        checkEnableOSCFeature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkEnableOSCFeatureActionPerformed(evt);
            }
        });

        textNumOscFeatures.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        textNumOscFeatures.setText("0");
        textNumOscFeatures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNumOscFeaturesActionPerformed(evt);
            }
        });
        textNumOscFeatures.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                textNumOscFeaturesPropertyChange(evt);
            }
        });

        jLabel6.setText("features extracted");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 2, 13));
        jLabel7.setText("Ensure your extractor is sending these to port 6453");

        helpFeatures.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wekinator/info.png"))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 2, 13));
        jLabel8.setText("Rebecca will make this box disappear soon");

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(27, 27, 27)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel4Layout.createSequentialGroup()
                                .add(textNumCustomFeatures, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel5)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel8))
                            .add(jPanel4Layout.createSequentialGroup()
                                .add(jLabel1)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(labelCustomFeatureExtractor))))
                    .add(checkEnableOSCFeature)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(checkEnableCustomChuckFeature)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buttonChooseChuckFeatureExtractor)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 117, Short.MAX_VALUE)
                        .add(helpFeatures))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(27, 27, 27)
                        .add(textNumOscFeatures, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel6)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel7)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(checkEnableCustomChuckFeature)
                    .add(buttonChooseChuckFeatureExtractor))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(labelCustomFeatureExtractor))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(textNumCustomFeatures, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5)
                    .add(jLabel8))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(checkEnableOSCFeature)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(textNumOscFeatures, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6)
                    .add(jLabel7)))
            .add(helpFeatures)
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Play-along learning"));

        helpPlayalong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wekinator/info.png"))); // NOI18N

        checkEnablePlayalong.setText("Enable play-along learning");

        buttonChoosePlayalongFile.setText("Choose file");
        buttonChoosePlayalongFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChoosePlayalongFileActionPerformed(evt);
            }
        });

        labelScorePlayer.setText("/user/rebecca/stuff/core_chuck/");

        jLabel15.setText("Location of ScorePlayer file:");

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(checkEnablePlayalong)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buttonChoosePlayalongFile)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 221, Short.MAX_VALUE)
                        .add(helpPlayalong))
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(27, 27, 27)
                        .add(jLabel15)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(labelScorePlayer)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(checkEnablePlayalong)
                            .add(buttonChoosePlayalongFile))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel15)
                            .add(labelScorePlayer)))
                    .add(helpPlayalong))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buttonLoadConfiguration.setText("Load configuration...");
        buttonLoadConfiguration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoadConfigurationActionPerformed(evt);
            }
        });

        buttonSaveConfiguration.setText("Save configuration...");
        buttonSaveConfiguration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveConfigurationActionPerformed(evt);
            }
        });

        buttonOK.setText("OK");
        buttonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOKActionPerformed(evt);
            }
        });

        buttonCancel.setText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("ChucK"));

        jLabel3.setText("Location of chuck executable");

        buttonChangeChuckExecutable.setText("Choose file");
        buttonChangeChuckExecutable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChangeChuckExecutableActionPerformed(evt);
            }
        });

        labelChuckExecutable.setText("/user/rebecca/stuff/core_chuck/");

        jLabel2.setText("Location of wekinator chuck directory:");

        buttonChangeCoreChuckLocation.setText("Choose directory");
        buttonChangeCoreChuckLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChangeCoreChuckLocationActionPerformed(evt);
            }
        });

        labelCoreChuckDirectory.setText("/user/rebecca/stuff/core_chuck/");

        helpCoreChuck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wekinator/info.png"))); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(24, 24, 24)
                        .add(labelChuckExecutable))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buttonChangeCoreChuckLocation))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(24, 24, 24)
                        .add(labelCoreChuckDirectory))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buttonChangeChuckExecutable)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 214, Short.MAX_VALUE)
                        .add(helpCoreChuck)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel3)
                            .add(buttonChangeChuckExecutable))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(labelChuckExecutable)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(buttonChangeCoreChuckLocation))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(labelCoreChuckDirectory))
                    .add(helpCoreChuck))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buttonSaveConfiguration1.setText("Export as .ck file...");
        buttonSaveConfiguration1.setEnabled(false);
        buttonSaveConfiguration1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveConfiguration1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(buttonLoadConfiguration)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(buttonSaveConfiguration)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(buttonSaveConfiguration1))
                    .add(layout.createSequentialGroup()
                        .add(buttonCancel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buttonOK))
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(buttonLoadConfiguration)
                    .add(buttonSaveConfiguration)
                    .add(buttonSaveConfiguration1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(buttonCancel)
                    .add(buttonOK))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void setConfigurationFromForm() {
        //Want chuck dir:
        configuration.setChuckExecutable(labelChuckExecutable.getText());

        configuration.setOscFeatureExtractorEnabled(checkEnableOSCFeature.getModel().isSelected());
        configuration.setCustomChuckFeatureExtractorEnabled(checkEnableCustomChuckFeature.getModel().isSelected());
        configuration.setCustomChuckFeatureExtractorFilename(labelCustomFeatureExtractor.getText());
            configuration.setNumOSCFeaturesExtracted(Integer.parseInt(textNumOscFeatures.getText()));
        configuration.setNumCustomChuckFeaturesExtracted(Integer.parseInt(textNumCustomFeatures.getText()));
    //    configuration.setOscFeatureExtractorSendPort(Integer.parseInt(textExtractorSendPort.getText()));
        if (radioUseChuckSynth.getModel().isSelected()) {
            configuration.setUseChuckSynthClass(true);
            configuration.setUseOscSynth(false);
        } else {
            configuration.setUseChuckSynthClass(false);
            configuration.setUseOscSynth(true);
        }

        configuration.setChuckSynthFilename(labelSynthClass.getText());
        configuration.setNumOscSynthParams(Integer.parseInt(textSynthNumParams.getText()));
        boolean isDiscrete = false;
        if (comboRealInteger.getSelectedIndex() == 0) {
            isDiscrete = false;
        } else {
            isDiscrete = true;
        }

        enableDiscreteSynthStuff(isDiscrete);


        boolean isDiscreteArray[] = new boolean[configuration.getNumOscSynthParams()];
        for (int i = 0; i < configuration.getNumOscSynthParams(); i++) {
            isDiscreteArray[i] = isDiscrete;
        }
        configuration.setIsOscSynthParamDiscrete(isDiscreteArray);
        configuration.setOscSynthReceivePort(Integer.parseInt(textSynthReceivePort.getText()));
      //  configuration.setOscSynthSendPort(Integer.parseInt(textSynthSendPort.getText()));
        configuration.setIsPlayalongLearningEnabled(checkEnablePlayalong.getModel().isSelected());
        configuration.setPlayalongLearningFile(labelScorePlayer.getText());

        configuration.setNumOscSynthMaxParamVals(Integer.parseInt(textSynthMaxParamVals.getText()));

        boolean isDist = (comboUseDist.getSelectedIndex() == 1);
                boolean isDistArray[] = new boolean[configuration.getNumOscSynthParams()];
        for (int i = 0; i < configuration.getNumOscSynthParams(); i++) {
            isDistArray[i] = isDiscrete;
        }
        configuration.setOscUseDistribution(isDistArray);



    }

    private void textNumCustomFeaturesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNumCustomFeaturesActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_textNumCustomFeaturesActionPerformed

    private void textNumCustomFeaturesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_textNumCustomFeaturesPropertyChange
}//GEN-LAST:event_textNumCustomFeaturesPropertyChange

    private void textNumOscFeaturesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNumOscFeaturesActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_textNumOscFeaturesActionPerformed

    private void textNumOscFeaturesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_textNumOscFeaturesPropertyChange
        // TODO add your handling code here:
}//GEN-LAST:event_textNumOscFeaturesPropertyChange

    private void checkEnableOSCFeatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkEnableOSCFeatureActionPerformed
}//GEN-LAST:event_checkEnableOSCFeatureActionPerformed

    private void textSynthNumParamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSynthNumParamsActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_textSynthNumParamsActionPerformed

    private void textSynthNumParamsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_textSynthNumParamsPropertyChange
        // TODO add your handling code here:
}//GEN-LAST:event_textSynthNumParamsPropertyChange

    private void textSynthReceivePortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSynthReceivePortActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_textSynthReceivePortActionPerformed

    private void textSynthReceivePortPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_textSynthReceivePortPropertyChange
        // TODO add your handling code here:
}//GEN-LAST:event_textSynthReceivePortPropertyChange

    private void textSynthSendPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSynthSendPortActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_textSynthSendPortActionPerformed

    private void textSynthSendPortPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_textSynthSendPortPropertyChange
        // TODO add your handling code here:
}//GEN-LAST:event_textSynthSendPortPropertyChange

    private void buttonLoadConfigurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoadConfigurationActionPerformed
        //Pop up findConfigurationFile dialog box
        File file = findConfigurationLoadFile();
        if (file != null) {
            try {
                //configuration = ChuckConfiguration.loadFromFile(file); //this is where it goes wrong...  TODO
                configuration.loadFromFile(file);
                updateAllComponents();
            } catch (Exception ex) {
                //TODO: handle:
                System.out.println("Could not load from file");
            }
        }
    }//GEN-LAST:event_buttonLoadConfigurationActionPerformed

    private void buttonSaveConfigurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveConfigurationActionPerformed
        setConfigurationFromForm();
        File file = findConfigurationSaveFile();
        if (file != null) {
            try {
                configuration.writeToFile(file);
            } catch (Exception ex) {
                //TODO: handle:
                System.out.println("Could not save to file");
            }
        }
    }//GEN-LAST:event_buttonSaveConfigurationActionPerformed

    private void checkEnableCustomChuckFeatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkEnableCustomChuckFeatureActionPerformed
    }//GEN-LAST:event_checkEnableCustomChuckFeatureActionPerformed

    private void buttonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOKActionPerformed
        setConfigurationFromForm();
        try {
            configuration.validate();
            this.dispose();
            //Valid: Give configuration to parent?
            // Save configuration & note location for next time?
            
        } catch (Exception ex) {
            //Invalid: Pop up a message box, stay open
          //   JOptionPane msgPane = new JOptionPane(ex.getMessage(), JOptionPane.ERROR_MESSAGE);
           //  msgPane.setVisible(true);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Invalid configuration", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_buttonOKActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        configuration.setEqualTo(initialConfiguration);
        //Close
        this.dispose();
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonChooseChuckFeatureExtractorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChooseChuckFeatureExtractorActionPerformed
        File f = findChuckFile();
        if (f != null) {
            labelCustomFeatureExtractor.setText(f.getAbsolutePath());
        } 
    }//GEN-LAST:event_buttonChooseChuckFeatureExtractorActionPerformed

    private void buttonChooseChuckSynthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChooseChuckSynthActionPerformed
        File f = findChuckFile();
        if (f != null) {
            labelSynthClass.setText(f.getAbsolutePath());
        }
    }//GEN-LAST:event_buttonChooseChuckSynthActionPerformed

    private void buttonChoosePlayalongFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChoosePlayalongFileActionPerformed
               File f = findChuckFile();
        if (f != null) {
            labelScorePlayer.setText(f.getAbsolutePath());
        }
    }//GEN-LAST:event_buttonChoosePlayalongFileActionPerformed

    private void buttonChangeChuckExecutableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChangeChuckExecutableActionPerformed
        File f = findChuckFile(); //TODO: have to change this to not be find chuck file, but find executable
        if (f != null) {
            try {
                labelChuckExecutable.setText(f.getCanonicalPath());

            } catch (IOException ex) {
                Logger.getLogger(ChuckConfigurationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_buttonChangeChuckExecutableActionPerformed

    private void buttonChangeCoreChuckLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChangeCoreChuckLocationActionPerformed
        File f = findCoreChuckDirectory(); //TODO: have to change this to not be find chuck file, but find executable
        if (f != null) {
            try {
                labelCoreChuckDirectory.setText(f.getCanonicalPath());
                            configuration.setChuckDir(f.getCanonicalPath());

            } catch (IOException ex) {
                Logger.getLogger(ChuckConfigurationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_buttonChangeCoreChuckLocationActionPerformed

    private void buttonSaveConfiguration1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveConfiguration1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonSaveConfiguration1ActionPerformed

    private void textSynthMaxParamValsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSynthMaxParamValsActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_textSynthMaxParamValsActionPerformed

    private void textSynthMaxParamValsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_textSynthMaxParamValsPropertyChange
        // TODO add your handling code here:
}//GEN-LAST:event_textSynthMaxParamValsPropertyChange

    private void comboRealIntegerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboRealIntegerActionPerformed
        if (comboRealInteger.getSelectedIndex() == 0) {
            enableDiscreteSynthStuff(false);
        } else {
                        enableDiscreteSynthStuff(true);

        }
    }//GEN-LAST:event_comboRealIntegerActionPerformed

    private File findConfigurationLoadFile() {
        JFileChooser fc = new JFileChooser(homePath);
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        boolean success = true;
        File file = null;
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fc.getSelectedFile();
        }
        return file;
    }

    private File findChuckFile() {
        //Start looking in chuck dir if possible
        File core_chuck = new File(configuration.getChuckDir());
        String preferredPath = homePath;
        if (core_chuck.exists()) {
            preferredPath = core_chuck.getParent();
        }

        JFileChooser fc = new JFileChooser(preferredPath);
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        boolean success = true;
        File file = null;
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fc.getSelectedFile();
        }
        return file;
    }

   private File findCoreChuckDirectory() {
        //Start looking in chuck dir if possible
        File core_chuck = new File(configuration.getChuckDir());
        String preferredPath = homePath;
        if (core_chuck.exists()) {
            preferredPath = core_chuck.getParent();
        }

        JFileChooser fc = new JFileChooser(preferredPath);
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        boolean success = true;
        File file = null;
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fc.getSelectedFile();
        }
        return file;
    }

    private File findConfigurationSaveFile() {
        String preferredLoc = configuration.getSaveLocation();
        File tmp = new File(preferredLoc);
        if (!tmp.exists())
            preferredLoc = homePath;


        JFileChooser fc = new JFileChooser(preferredLoc);
        fc.setDialogType(JFileChooser.SAVE_DIALOG);
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);


        int returnVal = fc.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            return fc.getSelectedFile();
        }
        return  null;     
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                File f = new File("./");
                ChuckConfiguration c = new ChuckConfiguration();
                new ChuckConfigurationForm(c).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonChangeChuckExecutable;
    private javax.swing.JButton buttonChangeCoreChuckLocation;
    private javax.swing.JButton buttonChooseChuckFeatureExtractor;
    private javax.swing.JButton buttonChooseChuckSynth;
    private javax.swing.JButton buttonChoosePlayalongFile;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton buttonLoadConfiguration;
    private javax.swing.JButton buttonOK;
    private javax.swing.JButton buttonSaveConfiguration;
    private javax.swing.JButton buttonSaveConfiguration1;
    private javax.swing.JCheckBox checkEnableCustomChuckFeature;
    private javax.swing.JCheckBox checkEnableOSCFeature;
    private javax.swing.JCheckBox checkEnablePlayalong;
    private javax.swing.JComboBox comboRealInteger;
    private javax.swing.JComboBox comboUseDist;
    private javax.swing.JButton helpCoreChuck;
    private javax.swing.JButton helpFeatures;
    private javax.swing.JButton helpPlayalong;
    private javax.swing.JButton helpSynth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel labelChuckExecutable;
    private javax.swing.JLabel labelCoreChuckDirectory;
    private javax.swing.JLabel labelCustomFeatureExtractor;
    private javax.swing.JLabel labelScorePlayer;
    private javax.swing.JLabel labelSynthClass;
    private javax.swing.JLabel labelSynthExpects;
    private javax.swing.JLabel labelSynthMaxParamVals;
    private javax.swing.JRadioButton radioUseChuckSynth;
    private javax.swing.JRadioButton radioUseOSCSynth;
    private javax.swing.JFormattedTextField textNumCustomFeatures;
    private javax.swing.JFormattedTextField textNumOscFeatures;
    private javax.swing.JFormattedTextField textSynthMaxParamVals;
    private javax.swing.JFormattedTextField textSynthNumParams;
    private javax.swing.JFormattedTextField textSynthReceivePort;
    private javax.swing.JFormattedTextField textSynthSendPort;
    // End of variables declaration//GEN-END:variables

    private void updateAllComponents() {
        labelCoreChuckDirectory.setText(configuration.getChuckDir());
        labelChuckExecutable.setText(configuration.getChuckExecutable());
        checkEnableCustomChuckFeature.getModel().setSelected(configuration.isCustomChuckFeatureExtractorEnabled());
        checkEnableOSCFeature.getModel().setSelected(configuration.isOscFeatureExtractorEnabled());
        labelCustomFeatureExtractor.setText(configuration.getCustomChuckFeatureExtractorFilename());
        textNumCustomFeatures.setText(Integer.toString(configuration.getNumCustomChuckFeaturesExtracted()));
        textNumOscFeatures.setText(Integer.toString(configuration.getNumOSCFeaturesExtracted()));
     //   textExtractorSendPort.setText(Integer.toString(configuration.getOscFeatureExtractorSendPort()));

        if (configuration.isUseChuckSynthClass()) {
            buttonGroup1.setSelected(radioUseChuckSynth.getModel(), true);
        } else {
            buttonGroup1.setSelected(radioUseOSCSynth.getModel(), true);
        }

        labelSynthClass.setText(configuration.getChuckSynthFilename());

        textSynthNumParams.setText(Integer.toString(configuration.getNumOscSynthParams()));
        boolean[] isParamDiscrete = configuration.getIsOscSynthParamDiscrete();
        if (isParamDiscrete.length > 0 && isParamDiscrete[0]) {
            comboRealInteger.setSelectedIndex(1);
            enableDiscreteSynthStuff(true);
        } else {
            comboRealInteger.setSelectedIndex(0);
           enableDiscreteSynthStuff(false);
        } //TODO TEST!s

        textSynthReceivePort.setText(Integer.toString(configuration.getOscSynthReceivePort()));
        textSynthSendPort.setText(Integer.toString(configuration.getOscSynthSendPort()));

        checkEnablePlayalong.getModel().setSelected(configuration.isIsPlayalongLearningEnabled());
        labelScorePlayer.setText(configuration.getPlayalongLearningFile());
        textSynthMaxParamVals.setText(Integer.toString(configuration.getNumOscSynthMaxParamVals()));

                boolean[] isUseDist = configuration.getOscUseDistribution();

        if (isUseDist.length >0 && isUseDist[0]) {
            comboUseDist.setSelectedIndex(1);
        } else {
            comboUseDist.setSelectedIndex(0);
        }
       /* if (configuration.isOscSynthIsDiscrete()) {
            enableDiscreteSynthStuff(true);
        } else {
            enableDiscreteSynthStuff(false);
        } */


        repaint();
    }

  
}
