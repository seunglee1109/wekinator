/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ParameterMiniPanel.java
 *
 * Created on Dec 4, 2009, 9:08:43 PM
 */
package wekinator;

/**
 *
 * @author rebecca
 */
public class ParameterMiniPanel extends javax.swing.JPanel {

    protected String name = "p";
    protected int max = 2;
    protected boolean isDiscrete = true;
    protected double value = 0.0;

    /** Creates new form ParameterMiniPanel */
    public ParameterMiniPanel() {
        initComponents();
    }

    public ParameterMiniPanel(String name, double value, int max, boolean isDiscrete, boolean use) {
        this.name = name;
        this.max = max;
        this.isDiscrete = isDiscrete;
        this.value = value;
        setGUI(use);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkUse = new javax.swing.JCheckBox();
        textValue = new javax.swing.JTextField();
        labelValues = new javax.swing.JLabel();

        checkUse.setText("asdf");
        checkUse.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        checkUse.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        checkUse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkUseActionPerformed(evt);
            }
        });

        textValue.setText("0");

        labelValues.setText("(0 to 100)");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(checkUse, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(textValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(labelValues, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(checkUse)
                .add(textValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(labelValues))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void checkUseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkUseActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_checkUseActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkUse;
    private javax.swing.JLabel labelValues;
    private javax.swing.JTextField textValue;
    // End of variables declaration//GEN-END:variables

    private void setGUI(boolean use) {
        checkUse.setSelected(use);
        checkUse.setName(name);
        if (isDiscrete) {
            labelValues.setText("(int 0 to " + max + ")");
            textValue.setText((int)value + "");
        } else {
            labelValues.setText("real #");
            textValue.setText(value + "");
        }
    }

    public boolean getUse() {
        return checkUse.isSelected();
    }

    public double getVal() {

        //Try parsing:
        if (isDiscrete) {
            try {
                int v = Integer.parseInt(textValue.getText());
                if (v >= 0 && v < max) {
                    textValue.setText(Integer.toString(v));
                    value = v;
                } else {
                    textValue.setText(Integer.toString((int)value)); //replace with last value
                }
            } catch (NumberFormatException ex) {
                textValue.setText(Integer.toString((int) value));
            }
        } else {
            try {
                value = Double.parseDouble(textValue.getText());
            } catch (NumberFormatException ex) {
                 textValue.setText(Integer.toString((int) value));
            }
        }
        return value;
    }
}
